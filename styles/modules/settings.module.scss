@use "./import/variables";
@use "./import/mixins";

main.main{
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	margin-top: 40pt;
}

.user_management{
	width: 100%;
	padding: 0 8pt;

	header .title{
		display: flex;
		justify-content: flex-start;
		align-items: center;
		font-weight: 600;
		margin-bottom: 12pt;
		line-height: 100%;
		gap: 5px;
	}

	@media screen and (max-width: variables.$mobileSize){
		padding: 0 10pt;
	}

	.users{
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(230px, 320px));
		width: 100%;
		gap: 8pt;

		$headerPadding: 4pt 0;

		@media screen and (max-width: variables.$mobileSize){
			display: flex;
			flex-direction: column;
			grid-template-columns: none;
		}

		.cell{
			background-color: var(--background-dark);
			border-radius: 4pt;

			.header,
			.form,
			.controls{
				margin: 0 4pt;
			}

			.form,
			.controls{
				display: flex;
				flex-direction: column;
				padding: 4pt 0;
				gap: 4pt;
			}

			.header{
				@include mixins.userSelectNone;

				display: flex;
				align-items: center;
				justify-content: flex-start;
				border-bottom: 1px solid var(--font-secondary-color);
				padding: $headerPadding;
				gap: 4pt;

				.username{
					flex: 1;
				}

				.remove{
					background-color: var(--remove-button);
					border-radius: 4pt;
					transform: scale(0.9);
					cursor: pointer;

					&:hover{
						filter: brightness(110%);
						box-shadow: 1px 1px 3px black;
					}
				}
			}
		}

		.user{
			position: relative;

			.controls{
				height: calc(100% - #{nth($headerPadding, 1) * 2 + 24px}); // 100% - header
				align-items: start;

				.label{
					.password{
						cursor: pointer;

						&.disc{
							-webkit-text-security: disc;
						}
					}
				}

				.edit{
					background-color: var(--background-dark-light);
					display: block;
					width: 120px;
					border-radius: 8pt;
					padding: 2pt 0;
					margin-bottom: 4pt;
					align-self: center;
					cursor: pointer;

					&:hover,
					&:focus{
						cursor: pointer;
						filter: brightness(120%);
						box-shadow: 0 1px 3px black;
					}
				}
			}
		}

		.add{
			.header{
				cursor: pointer;

				&:hover{
					filter: brightness(80%);
				}
			}
		}
	}
}

.user_management .form,
.overflow .form{
	div,
	label{
		display: flex;
		align-items: center;
		justify-content: space-between;
		flex-wrap: wrap;
		gap: 4pt;
	}

	div{
		width: 100%;
		position: relative;
		flex-direction: column;

		&.submit{
			justify-content: center;

			button{
				$height: 28px;

				background-color: #284e28;
				border-radius: 2pt;
				margin: 4pt 0;
				height: $height;
				width: 60px;
				text-align: center;

				&:hover,
				&:focus{
					cursor: pointer;
					filter: brightness(0.9);
					box-shadow: 0 1px 3px black;
				}

				.spinner{
					@include mixins.spinner(var(--font-color), calc(#{$height} - 6pt), block, 1px);

					display: inline-block;
					vertical-align: middle;
				}
			}
		}
	}

	label{
		flex-direction: row;
		width: inherit;

		span{
			flex: 1;
		}

		input{
			background-color: var(--background-dark-light);
			border-radius: 2pt;
			padding: 4pt 8pt;
			flex: 2;

			&[type=button],
			&[type=submit]{
				cursor: pointer;

				:hover{
					filter: brightness(0.9);
				}
			}

			&[type=text],
			&[type=password]{
				&::placeholder{
					color: var(--font-secondary-color);
					text-transform: initial;
				}

				&:focus{
					box-shadow: inset 0 0 4pt var(--background-dark);

					&::placeholder{
						visibility: hidden;
					}
				}
			}

			&[name=access]{
				text-transform: lowercase;
			}
		}

		&:has(:global .icon) input{
			padding-right: calc(24px + 8pt);
		}
	}

	:global .icon{
		@include mixins.userSelectNone;

		position: absolute;
		top: 2pt;
		right: 4pt;
		bottom: 2pt;

		&:hover{
			filter: brightness(0.8);
			cursor: pointer;
		}
	}
}

.overflow{
	.content{
		.form{
			display: flex;
			width: 100%;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			border-top: 1px solid white;
			padding: 8pt 4pt;
			gap: 4pt;

			div{
				width: clamp(100pt, 100%, 300pt);
			}
		}
	}
}

.error{
	display: block;
	position: relative;
	color: var(--error-color);
	font-size: 11px;
}
